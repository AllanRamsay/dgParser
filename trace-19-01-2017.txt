SICStus 3.12.8 (i386-darwin-8.9.1): Tue May  8 13:13:57 CEST 2007
Licensed to man.ac.uk
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/setup.pl...
%  loading /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/charsio.po...
%  module charsio imported into user
%   loading foreign resource /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/i386-darwin-8.9.1/charsio.bundle in module charsio
%  loaded /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/charsio.po in module charsio, 10 msec 8512 bytes
% consulted /Library/WebServer/CGI-Executables/dgParser/setup.pl in module user, 10 msec 11304 bytes
yes
| ?- setup(allwords).
% compiling /Library/WebServer/CGI-Executables/dgParser/useful.pl...
%  loading /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/terms.po...
%  module terms imported into user
%   loading /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/assoc.po...
%   module assoc imported into terms
%    loading /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/lists.po...
%    module lists imported into assoc
%    loaded /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/lists.po in module lists, 0 msec 11328 bytes
%   loaded /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/assoc.po in module assoc, 0 msec 22728 bytes
%  loaded /usr/local/bin/sp-3.12.8/sicstus-3.12.8/library/terms.po in module terms, 0 msec 31128 bytes
% Undefined predicates will just fail (fail)
% compiled /Library/WebServer/CGI-Executables/dgParser/useful.pl in module user, 10 msec 58368 bytes
% compiling /Library/WebServer/CGI-Executables/dgParser/features.pl...
% compiled /Library/WebServer/CGI-Executables/dgParser/features.pl in module user, 20 msec 21476 bytes
% compiling /Library/WebServer/CGI-Executables/dgParser/pretty.pl...
% compiled /Library/WebServer/CGI-Executables/dgParser/pretty.pl in module user, 10 msec 12504 bytes
% compiling /Library/WebServer/CGI-Executables/dgParser/io.pl...
% compiled /Library/WebServer/CGI-Executables/dgParser/io.pl in module user, 0 msec 1752 bytes
% compiling /Library/WebServer/CGI-Executables/dgParser/disjoin.pl...
% compiled /Library/WebServer/CGI-Executables/dgParser/disjoin.pl in module user, 10 msec 15728 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/signatures.pl...
* clauses for user:(signature/1) are not together
* Approximate lines: 5-58, file: '/Library/WebServer/CGI-Executables/dgParser/signatures.pl'
% consulted /Library/WebServer/CGI-Executables/dgParser/signatures.pl in module user, 0 msec 4952 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/agree.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/agree.pl in module user, 0 msec 5560 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/classes.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/classes.pl in module user, 30 msec 113424 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/vforms.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/vforms.pl in module user, 0 msec 22456 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/pronouns.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/pronouns.pl in module user, 0 msec 2568 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/verbs.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/verbs.pl in module user, 0 msec 28136 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/mclasses.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/mclasses.pl in module user, 0 msec 1328 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/lookup.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/lookup.pl in module user, 10 msec 10728 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/chart.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/chart.pl in module user, 10 msec 53384 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/treepr.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/treepr.pl in module user, 0 msec 9440 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/conll.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/conll.pl in module user, 0 msec 7872 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/parseconstrained.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/parseconstrained.pl in module user, 10 msec 6256 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/preprocess.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/preprocess.pl in module user, 0 msec 11728 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/spelling.pl...
* abolish(user:(spellingRule/3)) - no matching predicate
* Approximate lines: 113-115, file: '/Library/WebServer/CGI-Executables/dgParser/spelling.pl'
% consulted /Library/WebServer/CGI-Executables/dgParser/spelling.pl in module user, 0 msec 12952 bytes
% consulting /Library/WebServer/CGI-Executables/dgParser/allwords.pl...
%  including /Library/WebServer/CGI-Executables/dgParser/englishopen.pl...
%   including /Library/WebServer/CGI-Executables/dgParser/englishclosed.pl...
* clauses for user:(word/2) are not together
* Approximate lines: 433-438, file: '/Library/WebServer/CGI-Executables/dgParser/englishclosed.pl'
%    including /Library/WebServer/CGI-Executables/dgParser/closed.pl...
%    included /Library/WebServer/CGI-Executables/dgParser/closed.pl in module user, 10 msec 48248 bytes
%   included /Library/WebServer/CGI-Executables/dgParser/englishclosed.pl in module user, 30 msec 326424 bytes
%  included /Library/WebServer/CGI-Executables/dgParser/englishopen.pl in module user, 60 msec 647632 bytes
% consulted /Library/WebServer/CGI-Executables/dgParser/allwords.pl in module user, 9560 msec 67490536 bytes
yes
| ?- parseOne('I saw an ugly man', P), parseOne('I saw a human', Q), match(P, Q).

(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [an,
         {(arg(headnoun, -),
            [(man> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i6
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[an,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
%  consulting /Library/WebServer/CGI-Executables/dgParser/setup.pl...
%  consulted /Library/WebServer/CGI-Executables/dgParser/setup.pl in module user, 0 msec 472 bytes
* [Tail] - singleton variables in user:(match/2)
* Approximate lines: 45-54, file: '/Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl'
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec 5064 bytes
yes
| ?- parseOne('I saw an ugly man', P), parseOne('I saw a human', Q), match(P, Q).

(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [an,
         {(arg(headnoun, -),
            [(man> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i6
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[an,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]}] ? Top-level options:
   RET y     no more choices
     ; n     more choices
       b     break
       <     reset printdepth
       < <n> set printdepth
       ^     reset subterm
       ^ <n> set subterm
     ? h     print this information
 ? 
yes
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
* [Tail] - singleton variables in user:(match/2)
* Approximate lines: 45-54, file: '/Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl'
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 10 msec -80 bytes
yes
| ?- parseOne('I saw an ugly man', P), parseOne('I saw a human', Q), match(P, Q).

(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [an,
         {(arg(headnoun, -),
            [(man> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i6
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[an,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -160 bytes
yes
| ?- parseOne('I saw an ugly man', P), parseOne('I saw a human', Q), match(P, Q).

(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [an,
         {(arg(headnoun, -),
            [(man> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i6
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[an,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a human', Q), match(P, Q).

(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [an,
         {(arg(headnoun, -),
            [(man> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i6
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[an,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a fat human', Q), match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i6
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly human', Q), match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i13
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun), {(mod(amod) , [fat>])}])}])},

  ^C ^C
Prolog interruption (h for help)?      {(arg(subject,+) , [I:pronoun])}])Prolog interruption (h for help)? a
% Execution aborted
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly human', Q), match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- [1,2,3] =.. L.
! Type error in argument 2 of =.. /2
! atom expected, but 1 found
! goal:  _62=..[1,2,3]
| ?- [1,2,3] =.. L.
L = ['.',1,[2,3]] ? 
yes
| ?- spy(match).
% The debugger will first zip -- showing spypoints (zip)
% Plain spypoint for user:(match/2) added, BID=1
yes
% zip
| ?- match([a], [b]).
 +      1      1 Call: match([a],[b]) ? 
        2      2 Call: atom([a]) ? 
        2      2 Fail: atom([a]) ? 
        3      2 Call: hyppattern([a],[b]) ? 
        3      2 Fail: hyppattern([a],[b]) ? 
 +      4      2 Call: match(a,b) ? 
        5      3 Call: atom(a) ? 
        5      3 Exit: atom(a) ? 
        6      3 Call: hyp(_1910,a,b) ? 
        6      3 Fail: hyp(_1910,a,b) ? 
 +      4      2 Fail: match(a,b) ? 
        7      2 Call: [a]=.._1178 ? 
        7      2 Exit: [a]=..['.',a,[]] ? 
        8      2 Call: [b]=.._1172 ? 
        8      2 Exit: [b]=..['.',b,[]] ? 
 +      9      2 Call: match(['.',a,[]],['.',b,[]]) ? 
       10      3 Call: atom(['.',a,[]]) ? 
       10      3 Fail: atom(['.',a,[]]) ? 
       11      3 Call: hyppattern(['.',a,[]],['.',b,[]]) ? 
       11      3 Fail: hyppattern(['.',a,[]],['.',b,[]]) ? 
 +     12      3 Call: match('.','.') ? 
 +     12      3 Exit: match('.','.') ? 
 +     13      3 Call: match([a,[]],[b,[]]) ? 
       14      4 Call: atom([a,[]]) ? 
       14      4 Fail: atom([a,[]]) ? 
       15      4 Call: hyppattern([a,[]],[b,[]]) ? 
       15      4 Fail: hyppattern([a,[]],[b,[]]) ? 
 +     16      4 Call: match(a,b) ? 
       17      5 Call: atom(a) ? 
       17      5 Exit: atom(a) ? 
       18      5 Call: hyp(_7451,a,b) ? 
       18      5 Fail: hyp(_7451,a,b) ? 
 +     16      4 Fail: match(a,b) ? 
       19      4 Call: [a,[]]=.._6719 ? 
       19      4 Exit: [a,[]]=..['.',a,[[]]] ? 
       20      4 Call: [b,[]]=.._6713 ? a
% Execution aborted
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec 0 bytes
yes
| ?- match([a], [b]).
no
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a fat human', Q), match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- parseOne('I saw a man with a nose with a big nose', P), parseOne('I saw a human with a nose', Q), match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i13
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun), {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- parseOne('I saw a man with a nose with a big nose', P), parseOne('I saw a human with a nose', Q), match(P, Q).

(i69
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(man>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a,
             {(arg(headnoun, -),
                [(nose> : noun), {(mod(amod) , [big>])}])}])}])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun|...]}]}]},{mod(ppmod),[with:prep,{arg(...),[a|...]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]}] ? 
yes
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
* [H2,Hb2] - singleton variables in user:(match/2)
* Approximate lines: 40-44, file: '/Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl'
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -72 bytes
yes
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -80 bytes
yes
| ?- parseOne('I saw a man with a nose with a big nose', P), parseOne('I saw a human with a nose', Q), !, match(P, Q).

(i69
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(man>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a,
             {(arg(headnoun, -),
                [(nose> : noun), {(mod(amod) , [big>])}])}])}])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun|...]}]}]},{mod(ppmod),[with:prep,{arg(...),[a|...]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]}] ? ;
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun|...]}]}]},{mod(ppmod),[with:prep,{arg(...),[a|...]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]}] ? ;

(i32
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a,
                     {(arg(headnoun, -),
                        [(nose> : noun),
                         {(mod(ppmod),
                            [(with : prep),
                             {(arg(comp, +),
                                [a,
                                 {(arg(headnoun, -),
                                    [(nose> : noun),
                                     {(mod(amod) , [big>])}])}])}])}])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}] ? ;

(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
(i24
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a,
             {(arg(headnoun, -),
                [(nose> : noun),
                 {(mod(ppmod),
                    [(with : prep),
                     {(arg(comp, +),
                        [a,
                         {(arg(headnoun, -),
                            [(nose> : noun),
                             {(mod(amod) , [big>])}])}])}])}])}])}])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun|...]}]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]}] ? ;

(i31
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])},
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a,
                     {(arg(headnoun, -),
                        [(nose> : noun),
                         {(mod(amod) , [big>])}])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[with:prep|...]},{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}] ? ;
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[with:prep|...]},{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}] ? ;

(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
(i24
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a,
             {(arg(headnoun, -),
                [(nose> : noun), {(mod(amod) , [big>])}])}])}])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun|...]}]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}] ? ;

(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun|...]}]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]}] ? ;

(i24
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(man>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a,
             {(arg(headnoun, -),
                [(nose> : noun), {(mod(amod) , [big>])}])}])}])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i23
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(human>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]},{mod(ppmod),[with:prep,{arg(...),[a|...]}]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun]}]},{arg(subject,+),['I':pronoun]},{mod(ppmod),[with:prep,{arg(comp,+),[a,{arg(...),[(nose>''):noun]}]}]}] ? 
yes
| ?- parseOne('I saw a man with a big nose', P), parseOne('I saw a human with a nose', Q), !, match(P, Q).

(i69
  + [(saw : verb),
     {(arg(dobj, +),
        [a, {(arg(headnoun,-) , [(man>):noun])}])},
     {(arg(subject,+) , [I:pronoun])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a,
             {(arg(headnoun, -),
                [(nose> : noun), {(mod(amod) , [big>])}])}])}])},
     {(mod(ppmod),
        [(with : prep),
         {(arg(comp, +),
            [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
no
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a fat human', Q), !, match(P, Q).

(i32
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a,
                     {(arg(headnoun, -),
                        [(nose> : noun),
                         {(mod(amod) , [big>])}])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i22
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(ppmod),
                [(with : prep),
                 {(arg(comp, +),
                    [a, {(arg(headnoun,-) , [(nose>):noun])}])}])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[with:prep|...]}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i13
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun), {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i8
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun), {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
no
| ?- xdelete(X, [1,2,3], Y).
X = 1,
Y = [2,3] ? ;
no
| ?- select(X, [1,2,3], Y).
no
| ?- select(X, [1,2,3], Y).
no
| ?- delete(X, [1,2,3], Y).
X = 1,
Y = [2,3] ? ;
no
| ?- listing(delete).
* listing(user:delete) - no matching predicate
yes
| ?- xdelete(X, [1,2,3], Y).
X = 1,
Y = [2,3] ? ;
X = 2,
Y = [1,3] ? ;
X = 3,
Y = [1,2] ? ;
no
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -56 bytes
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? 
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -40 bytes
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
no
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
* [T1] - singleton variables in user:(match/2)
* Approximate lines: 40-44, file: '/Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl'
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec 184 bytes
yes
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -80 bytes
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
no
| ?- spy(match).
% The debugger will first zip -- showing spypoints (zip)
% There is already a plain spypoint on user:(match/2), (BID=1)
yes
% zip
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},

 +      1      1 Call: match([saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],[saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}]) ?      {(arg(subject,+) , [I:pronoun])}])
        2      2 Call: atom([saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        2      2 Fail: atom([saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        3      2 Call: hyppattern([saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],[saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        3      2 Fail: hyppattern([saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],[saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
 +      4      2 Call: match(saw:verb,saw:verb) ? s
 +      4      2 Exit: match(saw:verb,saw:verb) ? 
 +      5      2 Call: match([{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],[{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        6      3 Call: atom([{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        6      3 Fail: atom([{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        7      3 Call: hyppattern([{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],[{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        7      3 Fail: hyppattern([{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],[{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}]) ? 
        8      3 Call: xdelete({arg(dobj,+),_565927},[{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],_565933) ? s
?       8      3 Exit: xdelete({arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},[{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}],[{arg(subject,+),['I':pronoun]}]) ? 
 +      9      3 Call: match([a,{arg(headnoun,-),[(man>''):noun,{mod(amod),[ugly>'']},{mod(amod),[fat>'']}]}],[a,{arg(headnoun,-),[(human>''):noun,{mod(amod),[fat>'']},{mod(amod),[ugly>'']}]}]) ? * Incorrect trace command print
Please enter a valid trace command ('h' for help).
 +      9      3 Call: match([a,{arg(headnoun,-),[(man>''):noun,{mod(amod),[ugly>'']},{mod(amod),[fat>'']}]}],[a,{arg(headnoun,-),[(human>''):noun,{mod(amod),[fat>'']},{mod(amod),[ugly>'']}]}]) ? 
       10      4 Call: atom([a,{arg(headnoun,-),[(man>''):noun,{mod(amod),[ugly>'']},{mod(amod),[fat>'']}]}]) ? a
% Execution aborted
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -112 bytes
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -96 bytes
yes
| ?- parseOne('I saw a fat ugly man', P), parseOne('I saw a ugly fat human', Q), !, match(P, Q).

(i15
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(man> : noun),
             {(mod(amod) , [ugly>])},
             {(mod(amod) , [fat>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
(i16
  + [(saw : verb),
     {(arg(dobj, +),
        [a,
         {(arg(headnoun, -),
            [(human> : noun),
             {(mod(amod) , [fat>])},
             {(mod(amod) , [ugly>])}])}])},
     {(arg(subject,+) , [I:pronoun])}])
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
P = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(man>''):noun,{mod(...),[ugly>'']},{mod(...),[fat>'']}]}]},{arg(subject,+),['I':pronoun]}],
Q = [saw:verb,{arg(dobj,+),[a,{arg(headnoun,-),[(human>''):noun,{mod(...),[fat>'']},{mod(...),[ugly>'']}]}]},{arg(subject,+),['I':pronoun]}] ? ;
no
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -64 bytes
yes
| ?- parseOne('X likes Y if X loves Y', P), !, addVars(P, Q).

(i16
  + [if,
     {(arg(antecedent, +),
        [(love>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])},
     {(arg(consequent, +),
        [(like>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])}])
P = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]}] ? 
yes
| ?- 
| ?- parseOne('X likes Y if X loves Y', P), !, addVars(P, Q), pretty(Q).

(i16
  + [if,
     {(arg(antecedent, +),
        [(love>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])},
     {(arg(consequent, +),
        [(like>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])}])
P = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]}],
Q = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),[_A]},{arg(subject,+),[_B]}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),[_A]},{arg(subject,+),[_B]}]}] ? 
yes
| ?- parseOne('X likes Y if X loves Y', P), !, addVars(P, Q), pretty(Q).

(i16
  + [if,
     {(arg(antecedent, +),
        [(love>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])},
     {(arg(consequent, +),
        [(like>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])}])
[if,
 {(arg(antecedent, +),
    [(love>s : verb),
     {(arg(dobj,+) , [A])},
     {(arg(subject,+) , [B])}])},
 {(arg(consequent, +),
    [(like>s : verb),
     {(arg(dobj,+) , [A])},
     {(arg(subject,+) , [B])}])}]
P = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]}],
Q = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),[_A]},{arg(subject,+),[_B]}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),[_A]},{arg(subject,+),[_B]}]}] ? 
yes
| ?- 
| ?- % consulting /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl...
% consulted /Library/WebServer/CGI-Executables/dgParser/matchTest_V5.pl in module user, 0 msec -72 bytes
yes
| ?- parseOne('John likes Mary', P), parseOne('Mary likes John', P).

(i16
  + [if,
     {(arg(antecedent, +),
        [(love>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])},
     {(arg(consequent, +),
        [(like>s : verb),
         {(arg(dobj,+) , [Y])},
         {(arg(subject,+) , [X])}])}])
[if,
 {(arg(antecedent, +),
    [(love>s : verb),
     {(arg(dobj,+) , A)},
     {(arg(subject,+) , B)}])},
 {(arg(consequent, +),
    [(like>s : verb),
     {(arg(dobj,+) , A)},
     {(arg(subject,+) , B)}])}]
P = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),['Y']},{arg(subject,+),['X']}]}],
Q = [if,{arg(antecedent,+),[(love>s):verb,{arg(dobj,+),_A},{arg(subject,+),_B}]},{arg(consequent,+),[(like>s):verb,{arg(dobj,+),_A},{arg(subject,+),_B}]}] ? 
yes
| ?- parseOne('John likes Mary', P), parseOne('Mary likes John', Q).

(i4
  + [(like>s : verb),
     {(arg(dobj,+) , [Mary])},
     {(arg(subject,+) , [John])}])
no
| ?- parseOne('John likes Mary', P), parseOne('Mary likes John', Q).

(i4
  + [X,
     {(arg(dobj,+) , Y)},
     {(arg(subject,+) , Z)}])
(i4
  + [X,
     {(arg(dobj,+) , Z)},
     {(arg(subject,+) , Y)}])
P = [(like>s):verb,{arg(dobj,+),['Mary']},{arg(subject,+),['John']}],
Q = [(like>s):verb,{arg(dobj,+),['John']},{arg(subject,+),['Mary']}] ? 
yes
| ?- 
